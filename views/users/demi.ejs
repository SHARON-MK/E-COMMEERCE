<div class="product_count" style="display: flex;">

    <a type="button" onclick="changeQuantity('<%=products._id%>','<%=value.productId._id%>',-1,)"

      class="genric-btn primary-border small">-</a>

    <!-- <input type="text" id="quantity" name="count" class="quantity form-control input-number" value="<%=value.quantity%>" min="0" max="100"> -->
    <span>&nbsp;&nbsp; <span id="<%=value.productId._id%>">

        <%=value.quantity%>
      </span> &nbsp;&nbsp; </span>

    <!-- <a href="#" class="genric-btn primary-border small">S</a> -->
    <a type="button" onclick="changeQuantity('<%=products._id%>','<%=value.productId._id%>',1,)"
      class="genric-btn primary-border small">+</a>


          </div>




<script>
    function changeQuantity(cartId, proId, count,) {
      let quantity = parseInt(document.getElementById(proId).innerHTML)
      let count1 = parseInt(count)

      let price = document.getElementById('price').innerHTML
      console.log(quantity, count, cartId, proId, price);
      $.ajax({
        url: '/cartqntyincrese',
        data: {
          cart: cartId,
          product: proId,
          count: count1,
          quantity: quantity,

        },

        method: 'post',
        success: (response) => {
          if (response.remove) {
            detelecartitem(proId)



          } else {
            
            document.getElementById(proId).innerHTML = quantity + count;

            document.getElementById("total").innerHTML = response.Total
            document.getElementById("total2").innerHTML = response.Total
          }







        }

      })

    }

  </script>

  <script>

    function detelecartitem(proId) {
      Swal.fire({
        title: "Are you sure?",
        text: "You won't be able to revert this!",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#3085d6",
        cancelButtonColor: "#d33",
        confirmButtonText: "Yes, delete it!",
        cancelButtonText: "Cancel",
      }).then((result) => {
        if (result.isConfirmed) {
          $.ajax({
            url: "/delete_cartitem",
            data: {

              product: proId,
            },
            method: "post",
            success: (response) => {
              if ((response.remove = true)) {
                location.reload();
              }
            },
          });
        }
      });
    }
  </script>


<script>
const cartquantity = async(req,res,next)=>{
    try{
        let cartId = req.body.cart;
         const proId = req.body.product;
         let quantity = req.body.quantity;

         let count = req.body.count; 
         
         if ((count == -1) && (quantity==1)){
            res.json({remove:true})


              }else{

    await cart.updateOne({user:req.session.user_id,"product.productId":proId},{$inc:{"product.$.quantity":count}});
              }
              next();


    }catch(error){
        console.log(error.message);
    }
}


const totalproductprice = async (req, res) => {
    try {
 
  const userd=await User.findOne({_id:req.session.user_id})

  
      let total = await cart.aggregate([
        {
          $match: {
            user: userd._id,
          },
        },
        {
          $unwind: "$product",
        },
        {
          $project: {
            price: "$product.price",
            quantity: "$product.quantity",
          },
        },
        {
          $group: {
            _id: null,
            total: { $sum: { $multiply: ["$price", "$quantity"] } },
          },
        },
      ]);
  
      let Total = total[0].total;

      res.json({ success: true, Total });
    } catch (error) {
      res.render("user/500");
    }
  };
</script>